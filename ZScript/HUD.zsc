class RLP_HUD : BaseStatusBar
{
	HUDFont mHUDFont;
	HUDFont mIndexFont;
	HUDFont mAmountFont;
	InventoryBarState diparms;
	

	override void Init()
	{
		Super.Init();
		SetSize(0, 320, 200);

		// Create the font used for the fullscreen HUD
		Font fnt = "HUDFONT_DOOM";
		mHUDFont = HUDFont.Create(fnt, fnt.GetCharWidth("0"), true);
		fnt = "INDEXFONT_DOOM";
		mIndexFont = HUDFont.Create(fnt, fnt.GetCharWidth("0"), Mono_CellLeft);
		mAmountFont = HUDFont.Create("INDEXFONT");
		diparms = InventoryBarState.Create();
	}

	override void Draw (int state, double TicFrac)
	{
		BaseStatusBar.Draw(state, TicFrac);
		if (state == HUD_StatusBar || state == HUD_Fullscreen)
		{
			BeginHUD();
			DrawFullScreenStuff();
		}
	}

	protected void DrawFullScreenStuff()
	{
		Vector2 iconbox = (40, 20);
		// Draw health
//		let berserk = CPlayer.mo.FindInventory("PowerStrength");
//		DrawImage(berserk? "PSTRA0" : "MEDIA0", (20, -2));

		DrawImage("Graphics/HUD/healthbar.png", (74, -24));
		if (CPlayer.Health == 0) // blank
			DrawBar("Graphics/HUD/bar_empty.png", "Graphics/HUD/bar_empty.png", CPlayer.Health, 0, (86, -24), 0, 0);
		else if (CPlayer.Health > 0 && CPlayer.Health <= 100) // red
			DrawBar("Graphics/HUD/bar_red.png", "Graphics/HUD/bar_empty.png", CPlayer.Health, 100, (86, -24), 0, 0);
		else if (CPlayer.Health > 100 && CPlayer.Health <= 200) // purple
			DrawBar("Graphics/HUD/bar_purple.png", "Graphics/HUD/bar_red.png", CPlayer.Health-100, 100, (86, -24), 0, 0);
		else if (CPlayer.Health > 200 && CPlayer.Health <= 300) // blue
			DrawBar("Graphics/HUD/bar_blue.png", "Graphics/HUD/bar_purple.png", CPlayer.Health-200, 100, (86, -24), 0, 0);
		else if (CPlayer.Health > 300 && CPlayer.Health <= 400) // teal
			DrawBar("Graphics/HUD/bar_teal.png", "Graphics/HUD/bar_blue.png", CPlayer.Health-300, 100, (86, -24), 0, 0);
		else if (CPlayer.Health > 400 && CPlayer.Health <= 500) // green
			DrawBar("Graphics/HUD/bar_green.png", "Graphics/HUD/bar_teal.png", CPlayer.Health-400, 100, (86, -24), 0, 0);
		else if (CPlayer.Health > 500 && CPlayer.Health <= 600) // gold
			DrawBar("Graphics/HUD/bar_gold.png", "Graphics/HUD/bar_green.png", CPlayer.Health-500, 100, (86, -24), 0, 0);
		else if (CPlayer.Health > 600) // gray
			DrawBar("Graphics/HUD/bar_gray.png", "Graphics/HUD/bar_gold.png", CPlayer.Health-600, 100, (86, -24), 0, 0);

		DrawImage("Graphics/HUD/armorbar.png", (74, -4));
		if (GetArmorAmount() == 0) // blank
			DrawBar("Graphics/HUD/bar_empty.png", "Graphics/HUD/bar_empty.png", GetArmorAmount(), 0, (86, -4), 0, 0);
		else if (GetArmorAmount() > 0 && GetArmorAmount() <= 100) // green
			DrawBar("Graphics/HUD/bar_green.png", "Graphics/HUD/bar_empty.png", GetArmorAmount(), 100, (86, -4), 0, 0);
		else if (GetArmorAmount() > 100) // teal
			DrawBar("Graphics/HUD/bar_teal.png", "Graphics/HUD/bar_green.png", GetArmorAmount()-100, 100, (86, -4), 0, 0);

	// And now a word from this video's sponsor:
	// Money. Money can help.
	// Money finance bills money charges spending money customers
	// dollars purse dollars money free premium money budgets.
	// I think money is great!
	// ~DaThings, "{YTP} ~ Speedfolded", 1:08
		int money, maxmoney;
		[money, maxmoney] = GetAmount('RLP_Currency');
		DrawImage("Graphics/HUD/money.png", (-74, -4));
		DrawString(mHUDFont, FormatNumber(money, 5, 5, 2), (-46, -20), DI_TEXT_ALIGN_RIGHT);

//		DrawString(mHUDFont, FormatNumber(CPlayer.health, 3), (44, -20));
		
		Inventory ammotype1, ammotype2;
		[ammotype1, ammotype2] = GetCurrentAmmo();
		if (ammotype1 == null)
		{
			DrawImage("Graphics/HUD/ammo0.png", (-34, -24));
		}
		if (ammotype1 != null && (ammotype2 == null || ammotype2 == ammotype1))
		{
			DrawImage("Graphics/HUD/ammo1.png", (-58, -24));
			DrawString(mHUDFont, FormatNumber(ammotype1.Amount, 3, 3, 2), (-46, -40), DI_TEXT_ALIGN_RIGHT);
		}
		if (ammotype2 != null && ammotype2 != ammotype1)
		{
			DrawImage("Graphics/HUD/ammo2.png", (-86, -24));
			DrawString(mHUDFont, FormatNumber(ammotype1.Amount, 3, 3, 2), (-46, -40), DI_TEXT_ALIGN_RIGHT);
			DrawString(mHUDFont, FormatNumber(ammotype2.Amount, 3, 3, 2), (-102, -40), DI_TEXT_ALIGN_RIGHT);
		}
		if (!isInventoryBarVisible() && !Level.NoInventoryBar && CPlayer.mo.InvSel != null)
		{
			DrawInventoryIcon(CPlayer.mo.InvSel, (-14, -24 + 17), DI_DIMDEPLETED);
			DrawString(mHUDFont, FormatNumber(CPlayer.mo.InvSel.Amount, 3), (-30, -24), DI_TEXT_ALIGN_RIGHT);
		}
		if (deathmatch)
		{
			DrawString(mHUDFont, FormatNumber(CPlayer.FragCount, 3), (-3, 1), DI_TEXT_ALIGN_RIGHT, Font.CR_GOLD);
		}
		else
		{
			DrawFullscreenKeys();
		}
		
		if (isInventoryBarVisible())
		{
			DrawInventoryBar(diparms, (0, 0), 7, DI_SCREEN_CENTER_BOTTOM, HX_SHADOW);
		}
	}
	
	protected virtual void DrawFullscreenKeys()
	{
		// Draw the keys. This does not use a special draw function like SBARINFO because the specifics will be different for each mod
		// so it's easier to copy or reimplement the following piece of code instead of trying to write a complicated all-encompassing solution.
		Vector2 keypos = (-10, 2);
		int rowc = 0;
		double roww = 0;
		for(let i = CPlayer.mo.Inv; i != null; i = i.Inv)
		{
			if (i is "Key" && i.Icon.IsValid())
			{
				DrawTexture(i.Icon, keypos, DI_SCREEN_RIGHT_TOP|DI_ITEM_LEFT_TOP);
				Vector2 size = TexMan.GetScaledSize(i.Icon);
				keypos.Y += size.Y + 2;
				roww = max(roww, size.X);
				if (++rowc == 3)
				{
					keypos.Y = 2;
					keypos.X -= roww + 2;
					roww = 0;
					rowc = 0;
				}
			}
		}
	}
}