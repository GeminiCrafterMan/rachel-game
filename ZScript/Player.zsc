class RLP_Player : PlayerPawn
{
	int ShotgunSpreadDelay;
	override void Tick()
	{
		Super.Tick();
		if (self.player && self.player.ReadyWeapon) // two null checks because yeah
		{
			if (self.ShotgunSpreadDelay > 36)
			{ 
				self.ShotgunSpreadDelay = 0;
				A_TakeInventory("RLP_KahunaSpread",1);
			}
			if (self.player.ReadyWeapon.GetClassName() == "RLP_Kahuna")
				self.ShotgunSpreadDelay += 1;
			else
				self.ShotgunSpreadDelay += 3;
		}
	}
	Default
	{
		Speed 1;
		Health 100;
		Radius 16;
		Height 56;
		Mass 100;
		PainChance 255;
		Player.DisplayName "Rachel";
		Player.SoundClass "RLP_Player";
		Player.StartItem "RLP_EveningStar";
		Player.StartItem "RLP_QuickKickController";
		Player.WeaponSlot 2, "RLP_EveningStar";
		Player.WeaponSlot 3, "RLP_Kahuna";

		Player.ColorRange 200, 207;
		Player.Colorset 0, "$TXT_COLOR_DEFAULT",		200,207,203;
		Player.Colorset 1, "$TXT_COLOR_WHITE",			0,	17,	0;
		Player.Colorset 2, "$TXT_COLOR_GRAY",			4,	24,	12;
		Player.Colorset 3, "$TXT_COLOR_BLACK",			21,	31,	27;
		Player.Colorset 4, "$TXT_COLOR_RED",			32,	47,	40;
		Player.Colorset 5, "$TXT_COLOR_ORANGE",			49,	62,	55;
		Player.Colorset 6, "$TXT_COLOR_YELLOW",			73,	79,	76;
		Player.Colorset 7, "$TXT_COLOR_GREEN",			96,111,102;
		Player.Colorset 8, "$TXT_COLOR_AQUA",			120,127,123;
		Player.Colorset 9, "$TXT_COLOR_SKY",			128,139,133;
		Player.Colorset 10,"$TXT_COLOR_BLUE",			146,153,151;
		Player.Colorset 11,"$TXT_COLOR_PURPLE",			160,169,164;
		Player.Colorset 12,"$TXT_COLOR_MAGENTA",		179,187,184;
		+DECOUPLEDANIMATIONS
		+NOSKIN

	}
	States
	{
		Spawn:
			M000 A 1 SetAnimation('Idle', flags: SAF_LOOP|SAF_NOOVERRIDE);
			Loop;
		See:
			M000 A 1 SetAnimation('Walk', 60, endFrame: 39, flags: SAF_LOOP|SAF_NOOVERRIDE);
			Loop;
		Missile:
			M000 A 20 SetAnimation('Fire', loopFrame: 6, flags: SAF_LOOP);
			Goto Spawn;
		Pain:
			M000 A 4 SetAnimation('Hurt');
			M000 A 4 A_Pain;
			Goto Spawn;
		Death:
			M000 A 10 SetAnimation('Death');
			M000 A 10 A_PlayerScream;
			M000 A -1 A_NoBlocking;
			Stop;

	}
}

class RLP_QuickKickController : CustomInventory
{
	const KICKLAYER = -100;
	override void DoEffect()
	{
		super.DoEffect();
		if (!owner || !owner.player)
		{
			return;
		}
		let psp = owner.player.FindPSprite(KICKLAYER );
		if (!psp)
		{
			psp = owner.player.GetPSprite(KICKLAYER );
			psp.caller = self;
			psp.bAddBob = false;
			psp.bAddWeapon = false;
			psp.SetState(ResolveState("ReadyKick"));
		}
	}
	Default
	{
		+DECOUPLEDANIMATIONS
		+INVENTORY.UNDROPPABLE
		+INVENTORY.UNTOSSABLE
		+INVENTORY.PERSISTENTPOWER
		+INVENTORY.AUTOACTIVATE //Use is called automatically
		Obituary "$KILLKICK";
	}
	States 
	{
		Use:
			TNT1 A 0 
			{
				// We're passing 'true' to the last argument, so
				// that the layer doesn't get overridden if for
				// some reason the item is used again:
				A_Overlay(KICKLAYER, "ReadyKick", true);
			}
			fail;
		ReadyKick:
			TNT1 A 1
			{
//				Console.Printf("Did effect");
				// Check if +user2 is pressed:
				if (player.health > 0 && player.cmd.buttons & BT_USER2)
				{
					// move to DoKick if so:
					return ResolveState("DoKick");
				}
				// Otherwise loop this layer
				return ResolveState(null);
			}
			loop;
		DoKick:
			TNT1 A 0 A_OverlayOffset(OverlayID(), -20, WEAPONTOP);
			M000 A 8 {
				invoker.SetAnimation('Kick', 40);
//				A_OverlayTranslation(OverlayID(), "Ice"); // maybe mess with this for an "iron shoes" kick powerup?
			}
			M000 A 15 {
				// redo this shit later
				int dmg = 11;
				if (FindInventory("PowerStrength"))
				{
					A_CustomPunch(dmg*10, norandom:true, flags: 0, pufftype: "RLP_KickPuff", range: meleeRange + 20, meleesound: "*fist"); // Berserk, if it still exists by the time I get back to this
				}
				else
				{
					A_CustomPunch(dmg, norandom:true, flags: 0, pufftype: "RLP_KickPuff", range: meleeRange + 20, meleesound: "*fist");
				}
			}
			goto ReadyKick; //Note that we go back to ready from here
	}
}
class RLP_KickPuff : BulletPuff
{
	Default
	{
		DamageType "Kick";
	}
}